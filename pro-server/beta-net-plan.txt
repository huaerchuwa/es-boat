(0 e 0 ((Island :? :? :? :? :? :?tim1 :?) nil nil) "as:RetractObsoleteIsland")
(1 x 1 ((OSMData :? :? :? :?tim2 :?) (:?tim2 :?tim1) #object[clojure.core$eval19442$fn__19443 0x3f191e78 "clojure.core$eval19442$fn__19443@3f191e78"]) "as:RetractObsoleteIsland" 12 (:?fids) #object[clojure.core$eval19446$fn__19447 0x68b7a60c "clojure.core$eval19446$fn__19447@68b7a60c"])
(2 e 2 ((NamedObject :? :? :? :? :? :?tim1 :?) nil nil) "as:RetractObsoleteObjects")
(3 x 1 ((OSMData :? :? :? :?tim2 :?) (:?tim2 :?tim1) #object[clojure.core$eval19450$fn__19451 0x3b57c5c0 "clojure.core$eval19450$fn__19451@3b57c5c0"]) "as:RetractObsoleteObjects" 12 (:?fids) #object[clojure.core$eval19454$fn__19455 0x25e3368a "clojure.core$eval19454$fn__19455@25e3368a"])
(4 e 1 ((OSMData :? :?crd1 :?rad :?tim1 :?vol) nil nil) "as:CheckOSMData")
(5 x 3 ((Question :? :?crd2 :? :? :? :? :? :? :? :?tim2) (:?tim2 :?crd2 :?vol :?crd1 :?tim1) #object[clojure.core$eval19458$fn__19459 0x3b098412 "clojure.core$eval19458$fn__19459@3b098412"]) "as:CheckOSMData" 12 (:?rad :?crd2 :?fids) #object[clojure.core$eval19466$fn__19467 0x7c621811 "clojure.core$eval19466$fn__19467@7c621811"])
(6 e 4 ((NearbyObjects :? :? :?tim1) nil nil) "as:AssertNearbyObjects")
(7 i 3 ((Question :? :?bco :?crs :? :? :? :? :? :? :?) nil nil))
(8 x 1 ((OSMData :? :? :? :?tim2 :?vol) (:?tim2 :?bco :?vol :?tim1) #object[clojure.core$eval19470$fn__19471 0x1ca0cb4a "clojure.core$eval19470$fn__19471@1ca0cb4a"]) "as:AssertNearbyObjects" 11 (:?tim2 :?fids) #object[clojure.core$eval19476$fn__19477 0x79e1bf47 "clojure.core$eval19476$fn__19477@79e1bf47"])
(9 e 5 ((NearbyIslands :? :? :?tim1) nil nil) "as:AssertNearbyIslands")
(10 i 3 ((Question :? :?bco :?crs :? :? :? :? :? :? :?) nil nil))
(11 x 1 ((OSMData :? :? :? :?tim2 :?vol) (:?tim2 :?bco :?vol :?tim1) #object[clojure.core$eval19492$fn__19493 0x7fba8951 "clojure.core$eval19492$fn__19493@7fba8951"]) "as:AssertNearbyIslands" 11 (:?tim2 :?crs :?bco :?fids) #object[clojure.core$eval19498$fn__19499 0x62685b52 "clojure.core$eval19498$fn__19499@62685b52"])
(12 e 0 ((Island :? :?ico :? :? :? :?tim1 :?) nil nil) "as:UpdatePolarCoord")
(13 x 3 ((Question :? :?bco :?crs :? :? :? :? :? :? :?tim2) (:?tim2 :?bco :?tim1) #object[clojure.core$eval19511$fn__19512 0x7bfa7bcc "clojure.core$eval19511$fn__19512@7bfa7bcc"]) "as:UpdatePolarCoord" 11 (:?tim2 :?crs :?bco :?ico :?fids) #object[clojure.core$eval19516$fn__19517 0x73edffc2 "clojure.core$eval19516$fn__19517@73edffc2"])
(14 e 6 ((Answer :? :? :?tim1) nil nil) "as:InitAnswer")
(15 x 3 ((Question :? :? :? :? :? :? :? :? :? :?tim2) (:?tim2 :?tim1) #object[clojure.core$eval19520$fn__19521 0x7982ed2 "clojure.core$eval19520$fn__19521@7982ed2"]) "as:InitAnswer" 11 (:?tim2 :?fids) #object[clojure.core$eval19524$fn__19525 0x34a67501 "clojure.core$eval19524$fn__19525@34a67501"])
(16 e 6 ((Answer :? :?acc :?) nil nil) "as:WhatIsAhead")
(17 i 7 ((Question :? :? :? :? :? "what-is" :? "ahead" :? :?) nil nil))
(18 x 8 ((Island :? :? :?pol :? "AHEAD" :? :?tit) nil nil) "as:WhatIsAhead" 10 (:?pol :?tit :?acc) #object[clojure.core$eval19528$fn__19529 0x7d32ab41 "clojure.core$eval19528$fn__19529@7d32ab41"])
(19 e 6 ((Answer :? :?acc :?) nil nil) "as:WhatIsAstern")
(20 i 9 ((Question :? :? :? :? :? "what-is" :? "astern" :? :?) nil nil))
(21 x 10 ((Island :? :? :?pol :? "ASTERN" :? :?tit) nil nil) "as:WhatIsAstern" 10 (:?pol :?tit :?acc) #object[clojure.core$eval19532$fn__19533 0x1e17d845 "clojure.core$eval19532$fn__19533@1e17d845"])
(22 e 6 ((Answer :? :?acc :?) nil nil) "as:WhatIsPortAbaft")
(23 i 11 ((Question :? :? :? :? :? "what-is" :? "abaft the port beam" :? :?) nil nil))
(24 x 12 ((Island :? :? :?pol :? "PORT-ABAFT" :? :?tit) nil nil) "as:WhatIsPortAbaft" 10 (:?pol :?tit :?acc) #object[clojure.core$eval19536$fn__19537 0x1a83fa77 "clojure.core$eval19536$fn__19537@1a83fa77"])
(25 e 6 ((Answer :? :?acc :?) nil nil) "as:WhatIsPortBeam")
(26 i 13 ((Question :? :? :? :? :? "what-is" :? "on the port beam" :? :?) nil nil))
(27 x 14 ((Island :? :? :?pol :? "PORT-BEAM" :? :?tit) nil nil) "as:WhatIsPortBeam" 10 (:?pol :?tit :?acc) #object[clojure.core$eval19540$fn__19541 0x5644e436 "clojure.core$eval19540$fn__19541@5644e436"])
(28 e 6 ((Answer :? :?acc :?) nil nil) "as:WhatIsPortBow")
(29 i 15 ((Question :? :? :? :? :? "what-is" :? "on the port bow" :? :?) nil nil))
(30 x 16 ((Island :? :? :?pol :? "PORT-BOW" :? :?tit) nil nil) "as:WhatIsPortBow" 10 (:?pol :?tit :?acc) #object[clojure.core$eval19544$fn__19545 0x380791b3 "clojure.core$eval19544$fn__19545@380791b3"])
(31 e 6 ((Answer :? :?acc :?) nil nil) "as:WhatIsStarAbaft")
(32 i 17 ((Question :? :? :? :? :? "what-is" :? "abaft the starboard beam" :? :?) nil nil))
(33 x 18 ((Island :? :? :?pol :? "STAR-ABAFT" :? :?tit) nil nil) "as:WhatIsStarAbaft" 10 (:?pol :?tit :?acc) #object[clojure.core$eval19548$fn__19549 0x31a09375 "clojure.core$eval19548$fn__19549@31a09375"])
(34 e 6 ((Answer :? :?acc :?) nil nil) "as:WhatIsStarBeam")
(35 i 19 ((Question :? :? :? :? :? "what-is" :? "on the starboard beam" :? :?) nil nil))
(36 x 20 ((Island :? :? :?pol :? "STAR-BEAM" :? :?tit) nil nil) "as:WhatIsStarBeam" 10 (:?pol :?tit :?acc) #object[clojure.core$eval19552$fn__19553 0x1cf4923c "clojure.core$eval19552$fn__19553@1cf4923c"])
(37 e 6 ((Answer :? :?acc :?) nil nil) "as:WhatIsStarBow")
(38 i 21 ((Question :? :? :? :? :? "what-is" :? "on the starboard bow" :? :?) nil nil))
(39 x 22 ((Island :? :? :?pol :? "STAR-BOW" :? :?tit) nil nil) "as:WhatIsStarBow" 10 (:?pol :?tit :?acc) #object[clojure.core$eval19556$fn__19557 0x4cfbc871 "clojure.core$eval19556$fn__19557@4cfbc871"])
(40 e 6 ((Answer :? :?acc :?) nil nil) "as:NearbyIslands")
(41 i 23 ((Question :? :? :? :? :? "nearby-islands" :? :? :? :?) nil nil))
(42 x 0 ((Island :? :? :? :? :? :? :?tit) nil nil) "as:NearbyIslands" 10 (:?tit :?acc) #object[clojure.core$eval19560$fn__19561 0x3c80f2f8 "clojure.core$eval19560$fn__19561@3c80f2f8"])
(43 e 6 ((Answer :? :?acc :?) nil nil) "as:IslandsBehind")
(44 i 24 ((Question :? :? :? :?tit1 :? "what-is" :? "behind the island" :? :?) nil nil))
(45 i 0 ((Island :? :? :?pol1 :?sec :? :? :?tit1) nil nil))
(46 x 0 ((Island :? :? :?pol2 :?sec :? :? :?tit2) (:?pol1 :?pol2) #object[clojure.core$eval19564$fn__19565 0x79b012e4 "clojure.core$eval19564$fn__19565@79b012e4"]) "as:IslandsBehind" 10 (:?tit2 :?acc :?pol2) #object[clojure.core$eval19568$fn__19569 0x298353ed "clojure.core$eval19568$fn__19569@298353ed"])
(47 e 6 ((Answer :? :?acc :?) nil nil) "as:IslandsBefore")
(48 i 25 ((Question :? :? :? :?tit1 :? "what-is" :? "before the island" :? :?) nil nil))
(49 i 0 ((Island :? :? :?pol1 :?sec :? :? :?tit1) nil nil))
(50 x 0 ((Island :? :? :?pol2 :?sec :? :? :?tit2) (:?pol1 :?pol2) #object[clojure.core$eval19572$fn__19573 0x6c46a1d9 "clojure.core$eval19572$fn__19573@6c46a1d9"]) "as:IslandsBefore" 10 (:?tit2 :?acc :?pol2) #object[clojure.core$eval19576$fn__19577 0x368ce3a5 "clojure.core$eval19576$fn__19577@368ce3a5"])
(51 e 1 ((OSMData :? :? :?rad :? :?) nil nil) "as:WhereIsIsland")
(52 i 26 ((Question :? :? :? :?tit :? "where-is" :? "island" :? :?) nil nil))
(53 x 0 ((Island :? :?crd :?pol :?sec :?sid :? :?tit) nil nil) "as:WhereIsIsland" 10 (:?sid :?pol :?tit :?crd :?rad :?fids) #object[clojure.core$eval19580$fn__19581 0x3f6023f0 "clojure.core$eval19580$fn__19581@3f6023f0"])
(54 e 6 ((Answer :? :?acc :?) nil nil) "as:AnswerIslandsOnSide")
(55 x 27 ((Question :? :? :? :? :? "what-is" :? :?sub :? :?) (:?sub) #object[clojure.core$eval19587$fn__19588 0x75be8346 "clojure.core$eval19587$fn__19588@75be8346"]) "as:AnswerIslandsOnSide" 9 (:?acc :?sub :?fids) #object[clojure.core$eval19591$fn__19592 0x25143938 "clojure.core$eval19591$fn__19592@25143938"])
(56 e 6 ((Answer :? :?acc :?) nil nil) "as:AnswerNearbyIslands")
(57 x 23 ((Question :? :? :? :? :? "nearby-islands" :? :? :? :?) nil nil) "as:AnswerNearbyIslands" 9 (:?acc :?fids) #object[clojure.core$eval19595$fn__19596 0x76f0c2d7 "clojure.core$eval19595$fn__19596@76f0c2d7"])
(58 e 6 ((Answer :? :?acc :?) nil nil) "as:AnswerIslandsBehind")
(59 x 24 ((Question :? :? :? :?tit :? "what-is" :? "behind the island" :? :?) nil nil) "as:AnswerIslandsBehind" 9 (:?tit :?acc :?fids) #object[clojure.core$eval19599$fn__19600 0x46787b63 "clojure.core$eval19599$fn__19600@46787b63"])
(60 e 6 ((Answer :? :?acc :?) nil nil) "as:AnswerIslandsBefore")
(61 x 25 ((Question :? :? :? :?tit :? "what-is" :? "before the island" :? :?) nil nil) "as:AnswerIslandsBefore" 9 (:?tit :?acc :?fids) #object[clojure.core$eval19603$fn__19604 0x6f3cecb7 "clojure.core$eval19603$fn__19604@6f3cecb7"])
