(0 e 0 ((Island :? :? :? :? :? :?tim1 :?) nil nil) "as:RetractObsoleteIsland")
(1 x 1 ((OSMData :? :? :? :?tim2 :?) (:?tim2 :?tim1) #object[clojure.core$eval16737$fn__16738 0x254993d8 "clojure.core$eval16737$fn__16738@254993d8"]) "as:RetractObsoleteIsland" 12 (:?fids) #object[clojure.core$eval16741$fn__16742 0x57e60817 "clojure.core$eval16741$fn__16742@57e60817"])
(2 e 1 ((OSMData :? :?crd1 :?rad :?tim1 :?vol) nil nil) "as:CheckOSMData")
(3 x 2 ((Question :? :?crd2 :? :? :? :? :? :? :? :?tim2) (:?tim2 :?crd2 :?vol :?crd1 :?tim1) #object[clojure.core$eval16745$fn__16746 0x6650fc64 "clojure.core$eval16745$fn__16746@6650fc64"]) "as:CheckOSMData" 12 (:?rad :?crd2 :?fids) #object[clojure.core$eval16753$fn__16754 0x2a2631ed "clojure.core$eval16753$fn__16754@2a2631ed"])
(4 e 3 ((NearbyIslands :? :? :?tim1) nil nil) "as:AssertNearbyIslands")
(5 i 2 ((Question :? :?bco :?crs :? :? :? :? :? :? :?) nil nil))
(6 x 1 ((OSMData :? :? :? :?tim2 :?vol) (:?tim2 :?bco :?vol :?tim1) #object[clojure.core$eval16757$fn__16758 0x36f05edf "clojure.core$eval16757$fn__16758@36f05edf"]) "as:AssertNearbyIslands" 11 (:?tim2 :?crs :?bco :?fids) #object[clojure.core$eval16763$fn__16764 0x607ce0d6 "clojure.core$eval16763$fn__16764@607ce0d6"])
(7 e 0 ((Island :? :?ico :? :? :? :?tim1 :?) nil nil) "as:UpdatePolarCoord")
(8 x 2 ((Question :? :?bco :?crs :? :? :? :? :? :? :?tim2) (:?tim2 :?bco :?tim1) #object[clojure.core$eval16776$fn__16777 0x2b578eba "clojure.core$eval16776$fn__16777@2b578eba"]) "as:UpdatePolarCoord" 11 (:?tim2 :?crs :?bco :?ico :?fids) #object[clojure.core$eval16781$fn__16782 0x7f1734e0 "clojure.core$eval16781$fn__16782@7f1734e0"])
(9 e 4 ((Answer :? :? :?tim1) nil nil) "as:InitAnswer")
(10 x 2 ((Question :? :? :? :? :? :? :? :? :? :?tim2) (:?tim2 :?tim1) #object[clojure.core$eval16785$fn__16786 0x5814775f "clojure.core$eval16785$fn__16786@5814775f"]) "as:InitAnswer" 11 (:?tim2 :?fids) #object[clojure.core$eval16789$fn__16790 0x4ddc58aa "clojure.core$eval16789$fn__16790@4ddc58aa"])
(11 e 4 ((Answer :? :?acc :?) nil nil) "as:NearbyIslands")
(12 i 5 ((Question :? :? :? :? :? "nearby-islands" :? :? :? :?) nil nil))
(13 x 0 ((Island :? :? :? :? :? :? :?tit) nil nil) "as:NearbyIslands" 10 (:?tit :?acc) #object[clojure.core$eval16793$fn__16794 0x4b58d349 "clojure.core$eval16793$fn__16794@4b58d349"])
(14 e 4 ((Answer :? :?acc :?) nil nil) "as:WhatIsAhead")
(15 i 6 ((Question :? :? :? :? :? "what-is" :? "ahead" :? :?) nil nil))
(16 x 7 ((Island :? :? :?pol :? "AHEAD" :? :?tit) nil nil) "as:WhatIsAhead" 10 (:?pol :?tit :?acc) #object[clojure.core$eval16797$fn__16798 0x22368b1d "clojure.core$eval16797$fn__16798@22368b1d"])
(17 e 4 ((Answer :? :?acc :?) nil nil) "as:WhatIsAstern")
(18 i 8 ((Question :? :? :? :? :? "what-is" :? "astern" :? :?) nil nil))
(19 x 9 ((Island :? :? :?pol :? "ASTERN" :? :?tit) nil nil) "as:WhatIsAstern" 10 (:?pol :?tit :?acc) #object[clojure.core$eval16801$fn__16802 0x1298c83d "clojure.core$eval16801$fn__16802@1298c83d"])
(20 e 4 ((Answer :? :?acc :?) nil nil) "as:WhatIsPortAbaft")
(21 i 10 ((Question :? :? :? :? :? "what-is" :? "abaft the port beam" :? :?) nil nil))
(22 x 11 ((Island :? :? :?pol :? "PORT-ABAFT" :? :?tit) nil nil) "as:WhatIsPortAbaft" 10 (:?pol :?tit :?acc) #object[clojure.core$eval16805$fn__16806 0x6d318b67 "clojure.core$eval16805$fn__16806@6d318b67"])
(23 e 4 ((Answer :? :?acc :?) nil nil) "as:WhatIsPortBeam")
(24 i 12 ((Question :? :? :? :? :? "what-is" :? "on the port beam" :? :?) nil nil))
(25 x 13 ((Island :? :? :?pol :? "PORT-BEAM" :? :?tit) nil nil) "as:WhatIsPortBeam" 10 (:?pol :?tit :?acc) #object[clojure.core$eval16809$fn__16810 0x7c90d0d8 "clojure.core$eval16809$fn__16810@7c90d0d8"])
(26 e 4 ((Answer :? :?acc :?) nil nil) "as:WhatIsPortBow")
(27 i 14 ((Question :? :? :? :? :? "what-is" :? "on the port bow" :? :?) nil nil))
(28 x 15 ((Island :? :? :?pol :? "PORT-BOW" :? :?tit) nil nil) "as:WhatIsPortBow" 10 (:?pol :?tit :?acc) #object[clojure.core$eval16813$fn__16814 0x1b599bab "clojure.core$eval16813$fn__16814@1b599bab"])
(29 e 4 ((Answer :? :?acc :?) nil nil) "as:WhatIsStarAbaft")
(30 i 16 ((Question :? :? :? :? :? "what-is" :? "abaft the starboard beam" :? :?) nil nil))
(31 x 17 ((Island :? :? :?pol :? "STAR-ABAFT" :? :?tit) nil nil) "as:WhatIsStarAbaft" 10 (:?pol :?tit :?acc) #object[clojure.core$eval16817$fn__16818 0x64a92e98 "clojure.core$eval16817$fn__16818@64a92e98"])
(32 e 4 ((Answer :? :?acc :?) nil nil) "as:WhatIsStarBeam")
(33 i 18 ((Question :? :? :? :? :? "what-is" :? "on the starboard beam" :? :?) nil nil))
(34 x 19 ((Island :? :? :?pol :? "STAR-BEAM" :? :?tit) nil nil) "as:WhatIsStarBeam" 10 (:?pol :?tit :?acc) #object[clojure.core$eval16821$fn__16822 0x6bceaf64 "clojure.core$eval16821$fn__16822@6bceaf64"])
(35 e 4 ((Answer :? :?acc :?) nil nil) "as:WhatIsStarBow")
(36 i 20 ((Question :? :? :? :? :? "what-is" :? "on the starboard bow" :? :?) nil nil))
(37 x 21 ((Island :? :? :?pol :? "STAR-BOW" :? :?tit) nil nil) "as:WhatIsStarBow" 10 (:?pol :?tit :?acc) #object[clojure.core$eval16825$fn__16826 0x57cc810 "clojure.core$eval16825$fn__16826@57cc810"])
(38 e 4 ((Answer :? :?acc :?) nil nil) "as:AnswerIslandsOnSide")
(39 x 22 ((Question :? :? :? :? :? "what-is" :? :?sub :? :?) (:?sub) #object[clojure.core$eval16829$fn__16830 0x49ddaf "clojure.core$eval16829$fn__16830@49ddaf"]) "as:AnswerIslandsOnSide" 9 (:?acc :?sub :?fids) #object[clojure.core$eval16833$fn__16834 0x2e0fa5e3 "clojure.core$eval16833$fn__16834@2e0fa5e3"])
(40 e 4 ((Answer :? :?acc :?) nil nil) "as:AnswerIslandsBehind")
(41 i 23 ((Question :? :? :? :?tit1 :? "what-is" :? "behind the island" :? :?) nil nil))
(42 i 0 ((Island :? :? :?pol1 :?sec :? :? :?tit1) nil nil))
(43 x 0 ((Island :? :? :?pol2 :?sec :? :? :?tit2) (:?pol1 :?pol2) #object[clojure.core$eval16837$fn__16838 0x5774eb36 "clojure.core$eval16837$fn__16838@5774eb36"]) "as:AnswerIslandsBehind" 9 (:?tit :?acc :?fids) #object[clojure.core$eval16841$fn__16842 0x11ca315a "clojure.core$eval16841$fn__16842@11ca315a"])
(44 e 4 ((Answer :? :?acc :?) nil nil) "as:AnswerNearbyIslands")
(45 x 5 ((Question :? :? :? :? :? "nearby-islands" :? :? :? :?) nil nil) "as:AnswerNearbyIslands" 9 (:?acc :?fids) #object[clojure.core$eval16845$fn__16846 0x1fb1f534 "clojure.core$eval16845$fn__16846@1fb1f534"])
