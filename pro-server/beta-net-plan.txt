(0 e 0 ((Island :? :? :? :? :?tim1 :?) nil nil) "as:RetractObsoleteIsland")
(1 x 1 ((OSMData :? :?tim2 :?) (:?tim2 :?tim1) #object[clojure.core$eval17999$fn__18000 0x461fe904 "clojure.core$eval17999$fn__18000@461fe904"]) "as:RetractObsoleteIsland" 11 (:?fids) #object[clojure.core$eval18003$fn__18004 0x2c4c416b "clojure.core$eval18003$fn__18004@2c4c416b"])
(2 e 1 ((OSMData :? :?tim1 :?vol) nil nil) "as:CheckOSMData")
(3 x 2 ((Question :? :? :? :? :? :? :? :?tim2) (:?tim2 :?vol :?tim1) #object[clojure.core$eval18007$fn__18008 0x7300e1a4 "clojure.core$eval18007$fn__18008@7300e1a4"]) "as:CheckOSMData" 11 (:?fids) #object[clojure.core$eval18013$fn__18014 0x6ff96026 "clojure.core$eval18013$fn__18014@6ff96026"])
(4 e 3 ((NearbyIslands :? :? :?tim1) nil nil) "as:UpdateNearbyIslands")
(5 i 2 ((Question :? :?bco :?crs :? :? :? :? :?) nil nil))
(6 x 1 ((OSMData :? :?tim2 :?vol) (:?tim2 :?vol :?tim1) #object[clojure.core$eval18017$fn__18018 0x839ec0d "clojure.core$eval18017$fn__18018@839ec0d"]) "as:UpdateNearbyIslands" 10 (:?tim2 :?crs :?bco :?fids) #object[clojure.core$eval18022$fn__18023 0x5e984e57 "clojure.core$eval18022$fn__18023@5e984e57"])
(7 e 0 ((Island :? :?ico :? :? :?tim1 :?) nil nil) "as:UpdatePolarCoord")
(8 x 2 ((Question :? :?bco :?crs :? :? :? :? :?tim2) (:?tim2 :?tim1) #object[clojure.core$eval18035$fn__18036 0x53e42ed6 "clojure.core$eval18035$fn__18036@53e42ed6"]) "as:UpdatePolarCoord" 10 (:?tim2 :?crs :?bco :?ico :?fids) #object[clojure.core$eval18039$fn__18040 0x610da95b "clojure.core$eval18039$fn__18040@610da95b"])
